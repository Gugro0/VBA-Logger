Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
'---------------------------------------------------------------------------------------
' Module    : clsLogger
' Author    : P.Rohorzka +  K.Gundermann
' Date      : 17.01.2012
' Purpose   : Central logging of Events
'             Each Event will generate a Log Entry (clsLogEntry)
'             This Entry will then be forwarded to clsLogSaver
' Methods   : LogEntry
'             Message, Error, Debug, Trace
' Properties: Session As clsLogSession : Information about the current session
'---------------------------------------------------------------------------------------

Option Compare Database
Option Explicit

Public Event SaveToLog(ByRef objLogEntry As clsLogEntry)

Private Const USE_EVENTS As Boolean = True
Private Const USE_CALL As Boolean = Not USE_EVENTS

Private c_Session As clsLogSession
Private c_Entry   As clsLogEntry

Private c_Enabled As Boolean


Public Property Get Enabled() As Boolean
  Enabled = c_Enabled
End Property
Public Property Let Enabled(ByVal TheValue As Boolean)
  c_Enabled = TheValue
End Property

Public Sub Save(ByVal objLogEntry As clsLogEntry)
  If Enabled Then
    If USE_EVENTS Then
      RaiseEvent SaveToLog(objLogEntry)
    ElseIf USE_CALL Then
      Call SaveToLogsaver(objLogEntry)
    End If
  End If
End Sub

Private Function NewEntry() As clsLogEntry
  Set NewEntry = c_Entry              ' Use Static Entry for performance !!!
  'Set NewEntry = New clsLogEntry
End Function


Public Sub Message(ByVal TheMessage As String)
  With NewEntry
    .Init MessageText:=TheMessage
    Call Save(.Self)
  End With
End Sub

Public Sub Error(ByVal Category As String, ByVal InModule As Variant, ByVal InProcedure As String, ByVal ErrNumber As Long, ByVal ErrText As String, _
                      Optional ByVal MessageDisplayed As Boolean, Optional ByVal StackTrace As String)

  If IsObject(InModule) Then
    InModule = TypeName(InModule)
  End If
  With NewEntry
    .Init Category, InModule, InProcedure, Sev_Error, Evt_Status, ErrNumber, ErrText, StackTrace, MessageDisplayed
    Call Save(.Self)
  End With
End Sub

Public Sub Debug_(ByVal Category As String, ByVal InModule As Variant, ByVal InProcedure As String, ByVal DebugText As String, _
                      Optional ByVal AdditionalInfo As String)

  If IsObject(InModule) Then
    InModule = TypeName(InModule)
  End If
  With NewEntry
    .Init Category, InModule, InProcedure, Sev_Debug, Evt_Status, 0, DebugText, AdditionalInfo
    Call Save(.Self)
  End With
End Sub

Public Sub Trace(ByVal Category As String, ByVal InModule As Variant, ByVal InProcedure As String, _
                 Optional ByVal TraceEvent As e_EventType = Evt_Status, _
                 Optional ByVal TraceText As String, _
                 Optional ByVal AdditionalInfo As String)

  Dim ID As Long

  If IsObject(InModule) Then
    InModule = TypeName(InModule)
    ID = VarPtr(InModule)
  End If
  With NewEntry
    .Init Category, InModule, InProcedure, Sev_Trace, TraceEvent, ID, TraceText, AdditionalInfo
    Call Save(.Self)
  End With
End Sub

Public Sub Performance(ByVal Category As String, ByVal InModule As Variant, ByVal InProcedure As String, _
                 Optional ByVal InfoText As String, _
                 Optional ByVal AdditionalInfo As String)

  Dim ID As Long

  If IsObject(InModule) Then
    InModule = TypeName(InModule)
    ID = VarPtr(InModule)
  End If
  With NewEntry
    .Init Category, InModule, InProcedure, Sev_Trace, Evt_Performance, ID, InfoText, AdditionalInfo
    Call Save(.Self)
  End With
End Sub



' --------------------------------------------------------------

Private Sub SaveToLogsaver(ByRef objLogEntry As clsLogEntry)
  Dim objLogsaver As ILogSaver
  Dim i As Integer
  
  On Error GoTo ErrCode
  
  With Logger.LogSaver.colLogSaver
    If .Count = 0 Then Exit Sub
    For i = 1 To .Count
      Set objLogsaver = .Item(i)
      Call objLogsaver.SaveToLog(objLogEntry)
    Next
  End With
  Exit Sub
  
ErrCode:
  Stop
End Sub


' --------------------------------------------------------------

Public Property Get Session() As clsLogSession
  Set Session = c_Session
End Property

Private Sub Class_Initialize()
  Set c_Session = New clsLogSession
  Set c_Entry = New clsLogEntry
  Me.Enabled = True
End Sub